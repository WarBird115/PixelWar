name: Update Password

on:
  schedule:
    - cron: '0 0 * * 0'  # This runs every Sunday at 00:00 UTC
  workflow_dispatch:     # Allows manual triggering of the workflow

jobs:
  update-password:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3  # Update to the latest version

      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Ensure compatibility with your Node.js script

      - name: Install Firebase Admin SDK
        run: npm install firebase-admin

      - name: Retrieve Weekly Password from Firebase
        env:
          FIREBASE_SERVICE_ACCOUNT_KEY: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}
        run: |
          # Create a Node.js script to retrieve password from Firebase
          cat << 'EOF' > retrieve-password.js
          const admin = require('firebase-admin');
          const fs = require('fs');

          // Parse the service account JSON from environment variable
          const serviceAccount = JSON.parse(process.env.FIREBASE_SERVICE_ACCOUNT_KEY);

          // Initialize Firebase Admin SDK
          admin.initializeApp({
            credential: admin.credential.cert(serviceAccount),
            databaseURL: "https://pixelwarnew-default-rtdb.europe-west1.firebasedatabase.app/"  // Replace with your database URL
          });

          // Reference to Firebase Realtime Database
          const db = admin.database();

          // Retrieve the weekly password from the first entry in the "password" object
          db.ref('/Data/password/1').once('value', (snapshot) => {
            const weeklyPassword = snapshot.val();
            console.log("Weekly password:", weeklyPassword);
            
            if (weeklyPassword) {
              // Save the password to a file
              fs.writeFileSync('selected_password.txt', weeklyPassword);
            } else {
              console.error("No password found at /Data/password/1.");
              process.exit(1); // Exit with error code for GitHub Actions
            }
          }).catch((error) => {
            console.error("Error retrieving password:", error);
            process.exit(1); // Exit with error code for GitHub Actions
          });
          EOF

          # Run the Node.js script
          node retrieve-password.js

      - name: Commit and Push Changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add selected_password.txt
          git commit -m "Update selected password"
          git push
