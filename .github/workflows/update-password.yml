name: Update Password

on:
  schedule:
    - cron: '0 0 * * 0'  # Runs every Sunday at 00:00 UTC
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  update-password:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3  # Update to the latest version

      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Firebase Admin SDK
        run: npm install firebase-admin

      - name: Retrieve Weekly Password from Firebase
        env:
          FIREBASE_SERVICE_ACCOUNT_KEY: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}
        run: |
          # Create a Node.js script to retrieve the password
          cat << 'EOF' > retrieve-password.js
          const admin = require('firebase-admin');
          const fs = require('fs');

          // Parse the service account JSON from the environment variable
          const serviceAccount = JSON.parse(process.env.FIREBASE_SERVICE_ACCOUNT_KEY);

          // Initialize Firebase Admin SDK
          admin.initializeApp({
            credential: admin.credential.cert(serviceAccount),
            databaseURL: "https://pixelwarnew-default-rtdb.europe-west1.firebasedatabase.app/"  // Replace with your database URL
          });

          // Reference to Firebase Realtime Database
          const db = admin.database();

          // Retrieve the weekly password
          db.ref('/Data/Password/1').once('value')
            .then((snapshot) => {
              const weeklyPassword = snapshot.val();
              if (weeklyPassword) {
                fs.writeFileSync('selected_password.txt', weeklyPassword);
                console.log("Password saved to selected_password.txt:", weeklyPassword);
              } else {
                console.error("No password found at /Data/Password/1.");
                process.exit(1); // Exit with error code
              }
            })
            .catch((error) => {
              console.error("Error retrieving password:", error);
              process.exit(1); // Exit with error code
            });
          EOF

          # Run the Node.js script
          node retrieve-password.js

      - name: Verify Selected Password File
        run: |
          if [ ! -f "selected_password.txt" ]; then
            echo "Error: selected_password.txt not found!"
            exit 1
          fi

      - name: Clean Up Untracked Changes
        run: |
          # Discard untracked changes (e.g., node_modules) to avoid conflicts
          git clean -fdX

      - name: Commit and Push Password Update
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add selected_password.txt
          git commit -m "Update weekly password"
          git push
